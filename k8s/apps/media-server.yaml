apiVersion: apps/v1
kind: Deployment
metadata:
  name: media-server
  namespace: home-lab
  labels:
    app: media-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: media-server
  template:
    metadata:
      labels:
        app: media-server
    spec:
      containers:
      - name: media-server
        image: home-lab/media-server:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: media-server-secrets
              key: postgres-url
        - name: REDIS_URL
          value: "redis://redis:6379"
        volumeMounts:
        - name: media-storage
          mountPath: /media
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: media-storage
        persistentVolumeClaim:
          claimName: media-storage-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: media-server
  namespace: home-lab
  labels:
    app: media-server
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: media-server
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: media-storage-pvc
  namespace: home-lab
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Gi
  storageClassName: nfs-client 